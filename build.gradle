/*
 * *******************************************************************************
 * Copyright (C) QuantActions AG - All Rights Reserved
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 * Written by Enea Ceolini <enea.ceolini@quantactions.com>, July 2024
 * *******************************************************************************
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        google()
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.5.1'
        classpath 'com.google.gms:google-services:4.4.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:2.0.0"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:1.9.20"
        classpath "org.jetbrains.dokka:android-documentation-plugin:1.7.20"
        classpath 'com.google.firebase:firebase-crashlytics-gradle:3.0.2'
        classpath "org.jetbrains.kotlin:kotlin-serialization:2.0.0"
        classpath 'com.google.dagger:hilt-android-gradle-plugin:2.48'
        classpath "org.jetbrains.kotlin:compose-compiler-gradle-plugin:2.0.0"

    }

    ext {
        // DONE:18 Add a custom footer message and path to the newly added css file
        customFooterMessage = "Made with ❤️ at QuantActions"
        customLogoFile = projectDir.toString() + "/logo-style.css"
    }

}

plugins {
    id 'com.google.devtools.ksp' version '2.0.0-1.0.22' apply false
}

apply plugin: "org.jetbrains.dokka"

allprojects {
    repositories {
        mavenCentral()
        google()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

//tasks.named("dokkaHtmlMultiModule") {
//    outputDirectory.set(file("../../QA-Android-SDK-docs/htmldocs"))
//}

subprojects {
//    apply from: file("../publish.gradle")
    // DONE:7 Add dokka plugin to each module
    apply plugin: "org.jetbrains.dokka"

    tasks.named("dokkaHtml") {
        outputDirectory.set(file("$rootProject.name-$project.name-dokka"))
        pluginsMapConfiguration.set(
                [
                        "org.jetbrains.dokka.base.DokkaBase": """{
              "footerMessage": "$customFooterMessage",
              "customStyleSheets": ["$customLogoFile"]
             }"""
                ]
        )
    }

    // DONE:8 Override dokkaHtml task and add custom output directory
//    tasks.named("dokkaHtml") {
//        // DONE:19 Add pluginsMapConfigurations for dokkaHtml, dokkaHtmlPartial

////        outputDirectory.set(file("$rootProject.name-$project.name-dokka"))
//        outputDirectory.set(file("../../QA-Android-SDK-docs/htmldocs"))
//        // DONE:17 Add custom naming format for modules
//        moduleName.set("$rootProject.name-$project.name")
////        moduleName.set("Android SDK")
//        // DONE:13 Set suppressInheritedMembers to true in both the tasks
//        suppressInheritedMembers.set(true)
//        dokkaSourceSets {
//            named("main") {
//                // DONE:14 Set includeNonPublic to true in both the tasks
//                includeNonPublic.set(true)
//                // DONE:16 Use custom markdown files for modules/packages
////                includes.from("module.md")
//                externalDocumentationLink {
//                    url.set(new URL("https://square.github.io/picasso/2.x/picasso/"))
//                }
//                externalDocumentationLink {
//                    url.set(new URL("https://bumptech.github.io/glide/javadocs/4120/"))
//                }
//            }
//        }
//    }

    // DONE:10 Override dokkaHtmlPartial task and add external documentation in it and dokkaHtml both
    tasks.named("dokkaHtmlPartial") {
//        // DONE:19 Add pluginsMapConfigurations for dokkaHtml, dokkaHtmlPartial
        pluginsMapConfiguration.set(
                [
                        "org.jetbrains.dokka.base.DokkaBase": """{
      "footerMessage": "$customFooterMessage",
      "customStyleSheets": ["$customLogoFile"]
     }"""
                ]
        )
    }
//        // DONE:17 Add custom naming format for modules
//        moduleName.set("$rootProject.name-$project.name")
////        moduleName.set("Android SDK")
//        // DONE:13 Set suppressInheritedMembers to true in both the tasks
//        suppressInheritedMembers.set(true)
//        dokkaSourceSets {
//            named("main") {
//                // DONE:14 Set includeNonPublic to true in both the tasks
//                includeNonPublic.set(true)
//                // DONE:16 Use custom markdown files for modules/packages
//                includes.from("module.md")
//                externalDocumentationLink {
//                    url.set(new URL("https://square.github.io/picasso/2.x/picasso/"))
//                }
//                externalDocumentationLink {
//                    url.set(new URL("https://bumptech.github.io/glide/javadocs/4120/"))
//                }
//            }
//        }
//    }

    dependencies {
        dokkaHtmlPlugin('org.jetbrains.dokka:android-documentation-plugin:1.7.20')
    }
}


//
afterEvaluate {
    tasks.named("dokkaHtmlMultiModule") {
        pluginsMapConfiguration.set(
                [
                        "org.jetbrains.dokka.base.DokkaBase": """{
          "footerMessage": "$customFooterMessage",
          "customStyleSheets": ["$customLogoFile"]
         }"""
                ]
        )
    }
}

tasks.register('cleanDokkaModuleDocs') {
    subprojects {
        delete file("$rootProject.name-$project.name-dokka")
    }
}

tasks.register('clean', Delete) {
    dependsOn cleanDokkaModuleDocs
    delete rootProject.buildDir
}
