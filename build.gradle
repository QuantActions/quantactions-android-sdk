/*
 * *******************************************************************************
 * Copyright (C) QuantActions AG - All Rights Reserved
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 * Written by Enea Ceolini <enea.ceolini@quantactions.com>, August 2024
 * *******************************************************************************
 */

buildscript {

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.5.1'
        classpath 'com.google.gms:google-services:4.4.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:2.0.0"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:1.9.20"
        classpath "org.jetbrains.dokka:android-documentation-plugin:1.7.20"
        classpath 'com.google.firebase:firebase-crashlytics-gradle:3.0.2'
        classpath "org.jetbrains.kotlin:kotlin-serialization:2.0.0"
        classpath 'com.google.dagger:hilt-android-gradle-plugin:2.48'
        classpath "org.jetbrains.kotlin:compose-compiler-gradle-plugin:2.0.0"

    }

    ext {
        customFooterMessage = "Made with ❤️ at QuantActions"
        customLogoFile = projectDir.toString() + "/logo-style.css"
    }

}

plugins {
    id 'com.google.devtools.ksp' version '2.0.0-1.0.22' apply false
}

apply plugin: "org.jetbrains.dokka"

allprojects {

    repositories {
        mavenCentral()
        google()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

subprojects {
    apply plugin: "org.jetbrains.dokka"

    tasks.named("dokkaHtml") {
        outputDirectory.set(file("$rootProject.name-$project.name-dokka"))
        pluginsMapConfiguration.set(
                [
                        "org.jetbrains.dokka.base.DokkaBase": """{
              "footerMessage": "$customFooterMessage",
              "customStyleSheets": ["$customLogoFile"]
             }"""
                ]
        )
    }

    tasks.named("dokkaHtmlPartial") {
        pluginsMapConfiguration.set(
                [
                        "org.jetbrains.dokka.base.DokkaBase": """{
      "footerMessage": "$customFooterMessage",
      "customStyleSheets": ["$customLogoFile"]
     }"""
                ]
        )
    }

    dependencies {
        dokkaHtmlPlugin('org.jetbrains.dokka:android-documentation-plugin:1.7.20')
    }
}

afterEvaluate {
    tasks.named("dokkaHtmlMultiModule") {
        pluginsMapConfiguration.set(
                [
                        "org.jetbrains.dokka.base.DokkaBase": """{
          "footerMessage": "$customFooterMessage",
          "customStyleSheets": ["$customLogoFile"]
         }"""
                ]
        )
    }
}

tasks.register('cleanDokkaModuleDocs') {
    subprojects {
        delete file("$rootProject.name-$project.name-dokka")
    }
}

tasks.register('clean', Delete) {
    dependsOn cleanDokkaModuleDocs
    delete rootProject.buildDir
}
