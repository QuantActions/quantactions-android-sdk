/*
 * *******************************************************************************
 * Copyright (C) QuantActions AG - All Rights Reserved
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 * Written by Enea Ceolini <enea.ceolini@quantactions.com>, July 2024
 * *******************************************************************************
 */
//file:noinspection HardCodedStringLiteral

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'maven-publish'
apply plugin: 'kotlinx-serialization'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'com.google.devtools.ksp'

android {
    compileSdk 34

    defaultConfig {
        minSdkVersion 21
        targetSdk 34

        buildFeatures.buildConfig true

        vectorDrawables.useSupportLibrary = true
        multiDexEnabled = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments.put("apiKey", project.properties["test.apiKey"])
        testInstrumentationRunnerArguments.put("testIdentityId", project.properties["test.identityId"])
        testInstrumentationRunnerArguments.put("testDeviceId", project.properties["test.deviceId"])
        testInstrumentationRunnerArguments.put("testPassword", project.properties["test.password"])
        testInstrumentationRunnerArguments.put("testParticipationId", project.properties["test.participationId"])
        testInstrumentationRunnerArguments.put("testStudyId", project.properties["test.studyId"])
        consumerProguardFiles "consumer-rules.pro"

        buildConfigField("String", "QA_UUID", "\"${project.properties["qa_uuid"]}\"")
        buildConfigField("String", "QA_API_ROUTE", "\"https://qa-apis.azure-api.net/tap/v1/\"")
//        buildConfigField("String", "QA_API_ROUTE", "\"http://localhost:8090/\"")

        ksp {
            arg("room.schemaLocation", "$projectDir/schemas")
        }
//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
//            }
//        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("long", "VERSION_CODE", "19")
            buildConfigField("String","VERSION_NAME","\"1.1.0\"")
        }
        debug {
            minifyEnabled false
            buildConfigField("long", "VERSION_CODE", "19")
            buildConfigField("String","VERSION_NAME","\"1.1.0\"")
        }
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES.txt', 'META-INF/LICENSE.txt', 'META-INF/NOTICE.txt', 'META-INF/NOTICE', 'META-INF/LICENSE', 'META-INF/DEPENDENCIES', 'META-INF/notice.txt', 'META-INF/license.txt', 'META-INF/dependencies.txt', 'META-INF/LGPL2.1']
        }
    }
    buildFeatures{
        buildConfig true
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
        freeCompilerArgs = ['-Xjvm-default=all']
    }

    sourceSets {
        // Adds exported schema location as test app assets.
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    namespace 'com.quantactions.sdk'
}


dependencies {

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'

    implementation fileTree(dir: "libs", include: ["*.jar"])

    // EXTRA
    implementation 'com.android.volley:volley:1.2.1'
    implementation 'commons-io:commons-io:2.13.0'

    // ANDROIDX
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation "androidx.preference:preference-ktx:1.2.1"
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation "androidx.core:core-ktx:1.13.1"
    implementation 'com.google.android.gms:play-services-location:21.3.0'

    // WORK MANAGER
    implementation "androidx.work:work-runtime:2.9.0" // (Java)
    implementation "androidx.work:work-runtime-ktx:2.9.0" // Kotlin + coroutines
    // lifecycle
    implementation 'androidx.lifecycle:lifecycle-service:2.8.3'

    // FIREBASE & GOOGLE SERVICES
    implementation platform('com.google.firebase:firebase-bom:33.1.1')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'

    // TEST
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.3'
    androidTestImplementation "androidx.arch.core:core-testing:2.2.0"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.3'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.0'

    implementation 'com.jakewharton.timber:timber:5.0.1'

    // NETWORK and ROOM
    implementation "androidx.room:room-runtime:2.6.1"
    ksp "androidx.room:room-compiler:2.6.1"
    implementation "net.zetetic:android-database-sqlcipher:4.5.3"
    implementation "androidx.room:room-ktx:2.6.1"
    androidTestImplementation "androidx.room:room-testing:2.6.1"
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.10'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
    implementation 'io.github.hadiyarajesh.flower-retrofit:flower-retrofit:3.1.0'
    implementation 'com.squareup.moshi:moshi:1.15.1'
    implementation 'com.squareup.moshi:moshi-kotlin:1.15.1'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    ksp 'com.squareup.moshi:moshi-kotlin-codegen:1.15.0'

    implementation 'io.reactivex.rxjava2:rxkotlin:2.1.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.0'

    dokkaHtmlPlugin 'org.jetbrains.dokka:android-documentation-plugin:1.7.20'

}


dokkaHtmlPartial.configure {
    dokkaSourceSets {
        configureEach {
            moduleName.set("SDK")
            includes.from("module.md")
            noAndroidSdkLink.set(false)
            includeNonPublic.set(false)
            skipEmptyPackages.set(true)
            reportUndocumented.set(false)
            skipDeprecated.set(true)
            suppressInheritedMembers.set(true)
            perPackageOption {
                matchingRegex.set(".*\\.SyncWorker*") // will match all .internal packages and sub-packages
                suppress.set(true)
            }
            perPackageOption {
                matchingRegex.set(""".*adapters*""") // will match all .internal packages and sub-packages
                suppress.set(true)
            }
            perPackageOption {
                matchingRegex.set(""".*workers*""") // will match all .internal packages and sub-packages
                suppress.set(true)
            }
            perPackageOption {
                matchingRegex.set(""".*model*""") // will match all .internal packages and sub-packages
                suppress.set(true)
            }
            perPackageOption {
                matchingRegex.set(""".*repository*""") // will match all .internal packages and sub-packages
                suppress.set(true)
            }
            perPackageOption {
                matchingRegex.set(""".*api*""") // will match all .internal packages and sub-packages
                suppress.set(true)
            }
            perPackageOption {
                matchingRegex.set(""".RelaunchWorker""") // will match all .internal packages and sub-packages
                suppress.set(true)
            }
        }
    }
}

dokkaHtml.configure {
    outputDirectory.set(file("../../QA-Android-SDK-docs/docs"))
    dokkaSourceSets {
        configureEach {
            moduleName.set("SDK")
            includes.from("module.md")
            noAndroidSdkLink.set(false)
            includeNonPublic.set(false)
            skipEmptyPackages.set(true)
            reportUndocumented.set(false)
            skipDeprecated.set(true)
            suppressInheritedMembers.set(true)
            perPackageOption {
                matchingRegex.set(".*\\.SyncWorker*") // will match all .internal packages and sub-packages
                suppress.set(true)
            }
            perPackageOption {
                matchingRegex.set(""".*adapters*""") // will match all .internal packages and sub-packages
                suppress.set(true)
            }
            perPackageOption {
                matchingRegex.set(""".*workers*""") // will match all .internal packages and sub-packages
                suppress.set(true)
            }
            perPackageOption {
                matchingRegex.set(""".*repository*""") // will match all .internal packages and sub-packages
                suppress.set(true)
            }
            perPackageOption {
                matchingRegex.set(""".*api*""") // will match all .internal packages and sub-packages
                suppress.set(true)
            }
            perPackageOption {
                matchingRegex.set(""".RelaunchWorker""") // will match all .internal packages and sub-packages
                suppress.set(true)
            }
        }
    }
}

tasks.register('javadoc', Javadoc) {
    excludes = ['**/*.kt'] // < ---- Exclude all kotlin files from javadoc file.
}

afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = 'com.quantactions.sdk'
                artifactId = 'final'
                version = '1.0'
            }
            // Creates a Maven publication called “debug”.
//            debug(MavenPublication) {
//                // Applies the component for the debug build variant.
//                from components.debug
//
//                groupId = 'com.quantactions.sdk'
//                artifactId = 'final-debug'
//                version = '1.0'
//            }
        }
    }
}